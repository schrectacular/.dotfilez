- defaults:
    link:
      create: true
      relink: true

- clean: ['~']

- shell:
      # Recursively update submodules. This needs to be done before links.
    - git submodule update --init --recursive
      # Ask for priveledges once at the top.
    - sudo -v

- link:
    # link the zprezto submodule directory
    ~/.zprezto: zprezto
    # zprezto setup does this programatically, but sets up these links
    ~/.zlogin: zprezto/runcoms/zlogin
    ~/.zlogout: zprezto/runcoms/zlogout
    ~/.zshenv: zprezto/runcoms/zshenv
    # I modified these meself
    ~/.zpreztorc: zpreztorc
    ~/.zshrc: zshrc
    ~/.zprofile: zprofile
    # zprezto theme (placeholder)
    # ~/.zprezto/modules/prompt/functions/prompt_schrectacular_setup: prompt_schrectacular_setup
    # vim
    ~/.vimrc: vimrc
    ~/.vim/autoload/plug.vim: vim-plug/plug.vim

# Homebrew stuff
- tap: [caskroom/fonts]

- brew: [zsh, cask, tmux, emacs]

- cask: [macvim, iterm2]

- shell:
    # set hosts file
  - sudo curl -o /etc/hosts https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
  - | # MacOS specific setup
    if [[ $(uname -a) =~ "Darwin" ]]; then
        bash macos    #sensible defaults for macos
        #open -g whatever.itermcolors
    fi
  - | # Linux specific setup
    if [[ $(uname) == "Linux" ]]; then
        if [ -x "$(command -v apt-get)" ]; then #system has apt-get
            declare -a cmdList=("vim" "tmux" "ctags" "zsh")
            for cmd in ${cmdList[@]}; do
                [ -x "$(command -v $cmd)" ] || sudo apt install -y $cmd
            done
        fi
    fi
  - | # if zsh isn't default shell but it is found, then make it default.
    if [[ -x "$(command -v zsh)" && $SHELL != "/bin/zsh" ]]; then 
        # This seems to fail on some linux distros because it needs password
        chsh -s /bin/zsh
    fi
    # at some point I used this file to store recent regexp, so touch it
  - touch ~/.regexlist.vim
  - | # make some directories for vim temporary files
    declare -a dirList=("backup" "swap" "undo" "view")
    for dir in ${dirList[@]}; do
        mkdir -p ~/.vim/$dir
    done
    # Run vim with Plug. Have to wait, otherwise will exit before install complete
  - vim +PlugInstall; wait
